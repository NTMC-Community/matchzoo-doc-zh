# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, MatchZoo
# This file is distributed under the same license as the MatchZoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MatchZoo \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-13 00:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.0\n"

#: ../../source/matchzoo.rst:2
msgid "matchzoo package"
msgstr ""

#: ../../source/matchzoo.rst:5
msgid "Subpackages"
msgstr ""

#: ../../source/matchzoo.rst:25
msgid "Submodules"
msgstr ""

#: ../../source/matchzoo.rst:28
msgid "matchzoo.embedding module"
msgstr ""

#: matchzoo.embedding:1 of
msgid "Matchzoo toolkit for token embedding."
msgstr ""

#: matchzoo.embedding.Embedding:1 of
msgid "基类：:class:`object`"
msgstr ""

#: matchzoo.embedding.Embedding:1 of
msgid "Embedding class."
msgstr ""

#: matchzoo.embedding.Embedding:10 of
msgid "Examples::"
msgstr ""

#: matchzoo.embedding.Embedding:16 of
msgid "To load from a file:"
msgstr ""

#: matchzoo.embedding.Embedding:25 of
msgid "To build your own:"
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix:1 of
msgid "Build a matrix using `term_index`."
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix matchzoo.embedding.load_from_file
#: of
msgid "参数"
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix:4 of
msgid "A `dict` or `TermIndex` to build with."
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix:5 of
msgid ""
"A callable that returns a default value for missing terms in data. "
"(default: a random uniform distribution in range) `(-0.2, 0.2)`)."
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix
#: matchzoo.embedding.Embedding.input_dim
#: matchzoo.embedding.Embedding.output_dim matchzoo.embedding.load_from_file of
msgid "返回类型"
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix:8 of
msgid ":py:class:`~numpy.ndarray`"
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix matchzoo.embedding.load_from_file
#: of
msgid "返回"
msgstr ""

#: matchzoo.embedding.Embedding.build_matrix:9 of
msgid "A matrix."
msgstr ""

#: matchzoo.embedding.Embedding.input_dim:1 of
msgid "return Embedding input dimension."
msgstr ""

#: matchzoo.embedding.Embedding.input_dim:3
#: matchzoo.embedding.Embedding.output_dim:3 of
msgid ":py:class:`int`"
msgstr ""

#: matchzoo.embedding.Embedding.output_dim:1 of
msgid "return Embedding output dimension."
msgstr ""

#: matchzoo.embedding.load_from_file:1 of
msgid "Load embedding from `file_path`."
msgstr ""

#: matchzoo.embedding.load_from_file:4 of
msgid "Path to file."
msgstr ""

#: matchzoo.embedding.load_from_file:6 of
msgid ""
"Embedding file format mode, one of 'word2vec' or 'glove'. (default: "
"'word2vec')"
msgstr ""

#: matchzoo.embedding.load_from_file:8 of
msgid ":py:class:`~matchzoo.embedding.Embedding`"
msgstr ""

#: matchzoo.embedding.load_from_file:9 of
msgid "An :class:`matchzoo.embedding.Embedding` instance."
msgstr ""

#: ../../source/matchzoo.rst:36
msgid "matchzoo.logger module"
msgstr ""

#: matchzoo.logger:1 of
msgid "MatchZoo Logging module."
msgstr ""

#: ../../source/matchzoo.rst:44
msgid "matchzoo.version module"
msgstr ""

#: matchzoo.version:1 of
msgid "Matchzoo version file."
msgstr ""

#: ../../source/matchzoo.rst:53
msgid "Module contents"
msgstr ""

#~ msgid "matchzoo.datapack module"
#~ msgstr ""

#~ msgid "Matchzoo DataPack, pair-wise tuple (feature) and context as input."
#~ msgstr ""

#~ msgid "Matchzoo :class:`DataPack` data structure, store dataframe and context."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "`DataPack`."
#~ msgstr ""

#~ msgid "type"
#~ msgstr ""

#~ msgid "Get :meth:`context` of class"
#~ msgstr ""

#~ msgid ":py:class:`dict`"
#~ msgstr ""

#~ msgid "Get :meth:`left` of :class:`DataPack`."
#~ msgstr ""

#~ msgid ":py:class:`~pandas.core.frame.DataFrame`"
#~ msgstr ""

#~ msgid "Get :meth:`relation` of :class:`DataPack`."
#~ msgstr ""

#~ msgid "Get :meth:`right` of :class:`DataPack`."
#~ msgstr ""

#~ msgid "Save the :class:`DataPack` object."
#~ msgstr ""

#~ msgid ""
#~ "A saved :class:`DataPack` is represented "
#~ "as a directory with a :class:`DataPack`"
#~ " object (transformed user input as "
#~ "features and context), it will be "
#~ "saved by `pickle`."
#~ msgstr ""

#~ msgid "directory path of the saved :class:`DataPack`."
#~ msgstr ""

#~ msgid "Load a :class:`DataPack`. The reverse function of :meth:`save`."
#~ msgstr ""

#~ msgid "directory path of the saved model."
#~ msgstr ""

#~ msgid ":py:class:`~matchzoo.datapack.DataPack`"
#~ msgstr ""

#~ msgid "a :class:`DataPack` instance."
#~ msgstr ""

#~ msgid "TODO: https://github.com/dmlc/gluon-nlp/blob/"
#~ msgstr ""

#~ msgid ""
#~ "5e65c4751e1be8920b1021822a988af77224902f/ "
#~ "gluonnlp/embedding/token_embedding.py"
#~ msgstr ""

#~ msgid "实际案例"
#~ msgstr ""

#~ msgid "Build an :attr:`embedding_mat` and an :attr:`index_state`."
#~ msgstr ""

#~ msgid "Get embedding dimension."
#~ msgstr ""

#~ msgid "Get embedding file name."
#~ msgstr ""

#~ msgid ":py:class:`str`"
#~ msgstr ""

#~ msgid "Get constructed embedding matrix."
#~ msgstr ""

#~ msgid "Get word index state dictionary."
#~ msgstr ""

#~ msgid "0 - [PAD] word, 1 - found embed, 2 - OOV word."
#~ msgstr ""

#~ msgid "matchzoo.losses module"
#~ msgstr ""

#~ msgid "Self defined loss function for ranking tasks."
#~ msgstr ""

#~ msgid "Calculate rank cross entropy loss."
#~ msgstr ""

#~ msgid "Support user defined :attr:`neg_num`."
#~ msgstr ""

#~ msgid "Label."
#~ msgstr ""

#~ msgid "Predicted result."
#~ msgstr ""

#~ msgid ""
#~ ":py:data:`~typing.Union`\\[:py:class:`~numpy.ndarray`, "
#~ ":py:class:`float`]"
#~ msgstr ""

#~ msgid "Crossentropy loss computed by user-defined negative number."
#~ msgstr ""

#~ msgid "Calculate rank hinge loss."
#~ msgstr ""

#~ msgid "Support user defined :attr:`margin` and :attr:`neg_num`."
#~ msgstr ""

#~ msgid "Hinge loss computed by user-defined margin."
#~ msgstr ""

#~ msgid "matchzoo.metrics module"
#~ msgstr ""

#~ msgid "Evaluation metrics for information retrieval."
#~ msgstr ""

#~ msgid "Calculate average precision (area under PR curve)."
#~ msgstr ""

#~ msgid "Relevance is binary (nonzero is relevant)."
#~ msgstr ""

#~ msgid ""
#~ "Relevance scores (list or numpy) in "
#~ "rank order (first element is the "
#~ "first item)."
#~ msgstr ""

#~ msgid "Average precision."
#~ msgstr ""

#~ msgid "Calculate discounted cumulative gain (dcg)."
#~ msgstr ""

#~ msgid "Relevance is positive real values or binary values."
#~ msgstr ""

#~ msgid "Number of results to consider"
#~ msgstr ""

#~ msgid ""
#~ "If 0 then weights are [1.0, 1.0,"
#~ " 0.6309, 0.5, 0.4307, ...] If 1 "
#~ "then weights are [1.0, 0.6309, 0.5, "
#~ "0.4307, ...]."
#~ msgstr ""

#~ msgid ":py:class:`float`"
#~ msgstr ""

#~ msgid "Discounted cumulative gain."
#~ msgstr ""

#~ msgid "Calculate mean average precision."
#~ msgstr ""

#~ msgid ""
#~ "Iterator of relevance scores (list or"
#~ " numpy) in rank order (first element"
#~ " is the first item)."
#~ msgstr ""

#~ msgid "Mean average precision."
#~ msgstr ""

#~ msgid "Calculate reciprocal of the rank of the first relevant item."
#~ msgstr ""

#~ msgid "First element is 'rank 1'. Relevance is binary (nonzero is relevant)."
#~ msgstr ""

#~ msgid "Mean reciprocal rank."
#~ msgstr ""

#~ msgid "Calculate normalized discounted cumulative gain (ndcg)."
#~ msgstr ""

#~ msgid "Normalized discounted cumulative gain."
#~ msgstr ""

#~ msgid "Calculate precision@k."
#~ msgstr ""

#~ msgid ""
#~ "Relevance scores (list or numpy) in "
#~ "rank order (first element is the "
#~ "first item)"
#~ msgstr ""

#~ msgid "Precision @ k"
#~ msgstr ""

#~ msgid "raises"
#~ msgstr ""

#~ msgid "ValueError: len(r) must be >= k."
#~ msgstr ""

#~ msgid "Calculate precision after all relevant documents have been retrieved."
#~ msgstr ""

#~ msgid "Precision score."
#~ msgstr ""

