# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, MatchZoo
# This file is distributed under the same license as the MatchZoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MatchZoo \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-13 00:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.0\n"

#: ../../source/matchzoo.preprocessor.rst:2
msgid "matchzoo.preprocessor package"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:5
msgid "Submodules"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:8
msgid "matchzoo.preprocessor.arci\\_preprocessor module"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:16
msgid "matchzoo.preprocessor.cdssm\\_preprocessor module"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:24
msgid "matchzoo.preprocessor.dssm\\_preprocessor module"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:32
msgid "matchzoo.preprocessor.process\\_units module"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:40
msgid "matchzoo.preprocessor.segment\\_mixin module"
msgstr ""

#: ../../source/matchzoo.preprocessor.rst:49
msgid "Module contents"
msgstr ""

#~ msgid "ArcI Preprocessor."
#~ msgstr ""

#~ msgid ""
#~ "基类：:class:`matchzoo.engine.base_preprocessor.BasePreprocessor`, "
#~ ":class:`matchzoo.preprocessor.segment_mixin.SegmentMixin`"
#~ msgstr ""

#~ msgid "ArcI preprocessor helper."
#~ msgstr ""

#~ msgid "Example"
#~ msgstr ""

#~ msgid "Fit pre-processing context for transformation."
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid "Inputs to be preprocessed."
#~ msgstr ""

#~ msgid "返回"
#~ msgstr ""

#~ msgid "class:`ArcIPreprocessor` instance."
#~ msgstr ""

#~ msgid "CDSSM Preprocessor."
#~ msgstr ""

#~ msgid "CDSSM preprocessor helper."
#~ msgstr ""

#~ msgid "Can be simplified by compute vocabulary term and index."
#~ msgstr ""

#~ msgid "class:`CDSSMPreprocessor` instance."
#~ msgstr ""

#~ msgid "DSSM Preprocessor."
#~ msgstr ""

#~ msgid "DSSM preprocessor helper."
#~ msgstr ""

#~ msgid "TODO: NEED REFACTORING."
#~ msgstr ""

#~ msgid "class:`DSSMPreprocessor` instance."
#~ msgstr ""

#~ msgid "Matchzoo toolkit for text pre-processing."
#~ msgstr ""

#~ msgid "基类：:class:`matchzoo.preprocessor.process_units.ProcessorUnit`"
#~ msgstr ""

#~ msgid "Process unit to remove digits."
#~ msgstr ""

#~ msgid "Remove digits from list of tokens."
#~ msgstr ""

#~ msgid "list of tokens to be filtered."
#~ msgstr ""

#~ msgid "return tokens"
#~ msgstr ""

#~ msgid "tokens of tokens without digits."
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr ""

#~ msgid ":py:class:`list`"
#~ msgstr ""

#~ msgid "FixedLengthUnit Class."
#~ msgstr ""

#~ msgid "Process unit to get the fixed length text."
#~ msgstr ""

#~ msgid "实际案例"
#~ msgstr ""

#~ msgid "Transform list of tokenized tokens into the fixed length text."
#~ msgstr ""

#~ msgid "list of tokenized tokens."
#~ msgstr ""

#~ msgid "list of tokenized tokens in fixed length."
#~ msgstr ""

#~ msgid "Process unit for token lemmatization."
#~ msgstr ""

#~ msgid "Lemmatization a sequence of tokens."
#~ msgstr ""

#~ msgid "list of tokens to be lemmatized."
#~ msgstr ""

#~ msgid "list of lemmatizd tokens."
#~ msgstr ""

#~ msgid "Process unit for text lower case."
#~ msgstr ""

#~ msgid "Convert list of tokens to lower case."
#~ msgstr ""

#~ msgid "list of tokens."
#~ msgstr ""

#~ msgid "lower-cased list of tokens."
#~ msgstr ""

#~ msgid "Process unit for n-letter generation."
#~ msgstr ""

#~ msgid ""
#~ "Triletter is used in :class:`DSSMModel`. "
#~ "This processor is expected to execute"
#~ " before `Vocab` has been created."
#~ msgstr ""

#~ msgid "Transform token into tri-letter."
#~ msgstr ""

#~ msgid ""
#~ "For example, `word` should be "
#~ "represented as `#wo`, `wor`, `ord` and"
#~ " `rd#`."
#~ msgstr ""

#~ msgid "list of tokens to be transformed."
#~ msgstr ""

#~ msgid "By default use 3-gram (tri-letter)."
#~ msgstr ""

#~ msgid "return n_letters"
#~ msgstr ""

#~ msgid "generated n_letters."
#~ msgstr ""

#~ msgid "基类：:class:`object`"
#~ msgstr ""

#~ msgid "Process unit do not persive state (i.e. do not need fit)."
#~ msgstr ""

#~ msgid "Abstract base method, need to be implemented in subclass."
#~ msgstr ""

#~ msgid "Process unit for remove punctuations."
#~ msgstr ""

#~ msgid "Remove punctuations from list of tokens."
#~ msgstr ""

#~ msgid "list of toekns."
#~ msgstr ""

#~ msgid "return rv"
#~ msgstr ""

#~ msgid "tokens  without punctuation."
#~ msgstr ""

#~ msgid "SlidingWindowUnit class."
#~ msgstr ""

#~ msgid "Used to get information from a window sliding through the input data."
#~ msgstr ""

#~ msgid "Compute the result of a window sliding through input data."
#~ msgstr ""

#~ msgid ""
#~ "For short inputs that can not fill"
#~ " :attr:`sliding_window`, the unit return an"
#~ " empty array."
#~ msgstr ""

#~ msgid "sequential input data."
#~ msgstr ""

#~ msgid "window sliding result."
#~ msgstr ""

#~ msgid "Process unit do persive state (i.e. need fit)."
#~ msgstr ""

#~ msgid "Get current state."
#~ msgstr ""

#~ msgid "Process unit for token stemming."
#~ msgstr ""

#~ msgid "Reducing inflected words to their word stem, base or root form."
#~ msgstr ""

#~ msgid "list of string to be stemmed."
#~ msgstr ""

#~ msgid "stemmer to use, `porter` or `lancaster`."
#~ msgstr ""

#~ msgid "引发"
#~ msgstr ""

#~ msgid "stemmer type should be porter or lancaster."
#~ msgstr ""

#~ msgid "stemmed token."
#~ msgstr ""

#~ msgid "Process unit to remove stop words."
#~ msgstr ""

#~ msgid "Get stopwords based on language."
#~ msgstr ""

#~ msgid "params lang"
#~ msgstr ""

#~ msgid "language code."
#~ msgstr ""

#~ msgid "list of stop words."
#~ msgstr ""

#~ msgid "Remove stopwords from list of tokenized tokens."
#~ msgstr ""

#~ msgid "language code for stopwords."
#~ msgstr ""

#~ msgid "list of tokenized tokens without stopwords."
#~ msgstr ""

#~ msgid "Process unit for text tokenization."
#~ msgstr ""

#~ msgid "Process input data from raw terms to list of tokens."
#~ msgstr ""

#~ msgid "raw textual input."
#~ msgstr ""

#~ msgid "tokenized tokens as a list."
#~ msgstr ""

#~ msgid "基类：:class:`matchzoo.preprocessor.process_units.StatefulProcessorUnit`"
#~ msgstr ""

#~ msgid "Vocabulary class."
#~ msgstr ""

#~ msgid "基类：:class:`dict`"
#~ msgstr ""

#~ msgid "Map index to term."
#~ msgstr ""

#~ msgid "Map term to index."
#~ msgstr ""

#~ msgid "Build a :class:`TermIndex` and a :class:`IndexTerm`."
#~ msgstr ""

#~ msgid "Transform a list of tokens to corresponding indices."
#~ msgstr ""

#~ msgid "Create word-hashing layer for :class:`DSSMModel`."
#~ msgstr ""

#~ msgid ""
#~ "The input of :class:`WordHashingUnit` should"
#~ " be a list of `tri-letters` "
#~ "extracted from one document. The output"
#~ " of :class:`WordHashingUnit` is the "
#~ "word-hashing representation of this "
#~ "document."
#~ msgstr ""

#~ msgid ""
#~ ":class:`NgramLetterUnit` and :class:`VocabularyUnit` "
#~ "are two essential prerequisite of "
#~ ":class:`WordHashingUnit`."
#~ msgstr ""

#~ msgid ""
#~ "TODO Update :class:`WordHashingUnit` to "
#~ "generalize more `DSSM` like models such"
#~ " as `CDSSM` and `LSTM-DSSM`."
#~ msgstr ""

#~ msgid "Transform list of :attr:`tri-letters` into word hashing layer."
#~ msgstr ""

#~ msgid "list of `tri_letters` generated by :class:`NgramLetterUnit`."
#~ msgstr ""

#~ msgid ":py:class:`~numpy.ndarray`"
#~ msgstr ""

#~ msgid "Word hashing representation of `tri-letters`."
#~ msgstr ""

#~ msgid "Convert list of input into class:`DataPack` expected format."
#~ msgstr ""

#~ msgid "Convert list of input into :class:`DataPack` expected format."
#~ msgstr ""

#~ msgid ""
#~ "This is a Mixin class, use "
#~ "multiple inherientence in Preprocessor "
#~ "classes. The input will be splited "
#~ "into three dataframes, including :attr:`left`,"
#~ " :attr:`right` and :attr:`relation`."
#~ msgstr ""

#~ msgid "Convert user input into :class:`DataPack` consist of two tables."
#~ msgstr ""

#~ msgid "Raw user inputs, list of tuples."
#~ msgstr ""

#~ msgid "`train` or `test`."
#~ msgstr ""

#~ msgid ":py:class:`~matchzoo.datapack.DataPack`"
#~ msgstr ""

#~ msgid "User input into a :class:`DataPack` with left, right and relation.."
#~ msgstr ""

